apiVersion: apps/v1
kind: Deployment
metadata:
  name: core-deployment
  labels:
    {{- include "czertainly.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "czertainly.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "czertainly.selectorLabels" . | nindent 8 }}
      annotations:
        # when the list of the trusted certificates is changed, restart deployment
        checksum/config: {{ include (print $.Template.BasePath "/trusted-certificates-secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: czertainly-core
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HEADER_ENABLED
              value: "true"
            {{- if .Values.global.httpProxy }}
            - name: HTTP_PROXY
              value: {{ .Values.global.httpProxy }}
            {{- end }}
            {{- if .Values.global.httpsProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.httpsProxy }}
            {{- end }}
            {{- if .Values.global.noProxy }}
            - name: NO_PROXY
              value: {{ .Values.global.noProxy }}
            {{- end }}
            - name: JDBC_URL
              value: {{ include "czertainly-lib.util.format.jdbcUrl" (list . "?characterEncoding=UTF-8") | quote }}
            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: core-secret
                  key: jdbcUsername
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: core-secret
                  key: jdbcPassword
            - name: TS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: core-secret
                  key: tsPassword
            - name: LOGGING_LEVEL_COM_CZERTAINLY
              value: {{ .Values.logging.level | quote }}
            {{- if .Values.registerAdmin.enabled }}
            - name: ADMIN_CERT
              valueFrom:
                secretKeyRef:
                  name: admin-certificate-secret
                  key: tls.crt
            {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 10
          {{- if .Values.registerAdmin.enabled }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - |
                    apk add curl &&
                    while ! nc -z localhost {{ .Values.service.port }}; do sleep 1; done &&
                    ADMIN_CERT=$( echo $ADMIN_CERT | awk '{gsub(/[[:blank:]]/,""); print}' ) &&
                    ADMIN_CERT=$( echo $ADMIN_CERT | awk '{gsub(/-----BEGINCERTIFICATE-----/,""); print}' ) &&
                    ADMIN_CERT=$( echo $ADMIN_CERT | awk '{gsub(/-----ENDCERTIFICATE-----/,""); print}' ) &&
                    curl -X POST \
                    -H 'content-type: application/json' \
                    -d '
                     {
                        "adminCertificate": "'$ADMIN_CERT'",
                        "certificateUuid": "",
                        "username": "{{ .Values.registerAdmin.admin.username }}",
                        "name": "{{ .Values.registerAdmin.admin.name }}",
                        "surname": "{{ .Values.registerAdmin.admin.surname }}",
                        "email": "{{ .Values.registerAdmin.admin.email }}",
                        "role": "superAdministrator",
                        "enabled": "true",
                        "description": "{{ .Values.registerAdmin.admin.description }}"
                     }' \
                     http://localhost:{{ .Values.service.port }}/api/v1/local/admins
          {{- end }}
          volumeMounts:
            - name: trusted-certificates-volume
              mountPath: /opt/czertainly/trusted-certificates.pem
              subPath: ca.crt
      volumes:
        - name: trusted-certificates-volume
          secret:
            secretName: trusted-certificates
        - name: core-secret
          secret:
            secretName: core-secret
