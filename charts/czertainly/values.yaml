# Default values for czertainly.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imagePullSecrets: []
  database:
    jdbcUrl: "jdbc:postgresql://host.docker.internal:5432/czertainlylocal?characterEncoding=UTF-8"
    username: "czertainlyuser"
    password: "your-strong-password"

nameOverride: ""
fullnameOverride: ""

registerAdmin:
  enabled: false
  admin:
    # PEM encoded certificate without chain
    certificate: ""
    username: "adminadmin"
    name: "admin"
    surname: "admin"
    email: "admin@czertainly.local"
    description: "First Administrator"
  # options: generated, external
  source: external

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
replicaCount: 1

trusted:
  certificates: ""

service:
  type: "ClusterIP"
  port: 8080

image:
  repository: harbor.3key.company/czertainly/czertainly-core
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

logging:
  level: "INFO"

proxy:
  httpProxyHost:
  httpProxyPort: "80"
  httpsProxyHost:
  httpsProxyPort: "443"
  httpNonProxyHosts: "localhost|127.*|[::1]"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "czertainly-sa"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

certManager:
  version: ""

hostName: localhost

letsEncrypt:
  # email: notifications@sample.com
  environment: production
  ingress:


ingress:
  enabled: false
  certificate:
    # options: internal, external
    source: internal
  # options: traefik, nginx
  class: nginx
  annotations: {
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP",
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional",
    nginx.ingress.kubernetes.io/auth-tls-secret: "czertainly/trusted-certificates",
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3",
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
  }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP",
    # nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional",
    # nginx.ingress.kubernetes.io/auth-tls-secret: "czertainly/ingress-ca-secret",
    # nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3",
    # nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
  #hosts:
  #  - host: czertainly.local
  #    paths:
  #      - path: /
  #        pathType: Prefix
  tls:
    secretName: czertainly-ingress-tls
  #  - secretName: czertainly.local-tls
  #    hosts:
  #      - czertainly.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

#
# dependencies management
#
apiGateway:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  replicaCount: 1
  service:
    type: "ClusterIP"
    port: 8080

feAdministrator:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  replicaCount: 1
  service:
    type: "ClusterIP"
    port: 80
  baseUrl: /administrator
  podAnnotations: { }

registerConnectors: false

commonCredentialProvider:
  enabled: false

ejbcaNgConnector:
  enabled: false