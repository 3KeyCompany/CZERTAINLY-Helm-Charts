# Default values for scheduler-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# Global parameters that will overwrite local parameters
global:
  config:
    enabled: false
  image:
    registry: ""
    # array of secret names
    pullSecrets: []
  volumes:
    ephemeral:
      type: ""
      sizeLimit: ""
      storageClassName: ""
      custom: {}
  database:
    type: ""
    host: ""
    port: ""
    name: ""
    username: ""
    password: ""

database:
  # currently only postgresql is supported
  type: "postgresql"
  host: "host.docker.internal"
  port: 5432
  name: "czertainlydb"
  username: "czertainlyuser"
  password: "your-strong-password"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
replicaCount: 1

service:
  type: "ClusterIP"
  port: 8080

image:
  # default registry name
  registry: harbor.3key.company
  repository: czertainly/czertainly-scheduler
  tag: develop-latest
  # the digest to be used instead of the tag
  digest: ""
  pullPolicy: IfNotPresent
  # array of secret names
  pullSecrets: []
  # default security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    readOnlyRootFilesystem: true
  # probes configuration
  probes:
    liveness:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 60
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    readiness:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 60
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    startup:
      enabled: false
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 30
      timeoutSeconds: 5
      periodSeconds: 5
      successThreshold: 1
      failureThreshold: 50
  resources: {}
    # We follow recommendations and general guidelines to manage resources from:
    # https://master.sdk.operatorframework.io/docs/best-practices/managing-resources/
    # We recommend default requests for CPU and Memory, leaving the limits as a conscious
    # choice for the user. If you do want to specify your own resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources'.
    # requests:
    #   cpu: 100m
    #   memory: 450M
    # limits: {}

curl:
  image:
    # default registry name
    registry: docker.io
    repository: curlimages/curl
    tag: 8.2.1
    # the digest to be used instead of the tag
    digest: ""
    pullPolicy: IfNotPresent
    # array of secret names
    pullSecrets: []
    # default security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 100
      readOnlyRootFilesystem: true
    # it does not make sense to have probes for curl

volumes:
  ephemeral:
    # available types are: memory, storage, custom
    type: memory
    sizeLimit: "1Mi"
    storageClassName: ""
    custom: {}
    #  emptyDir:
    #    sizeLimit: "10Mi"
    #    medium: "Memory"

logging:
  level: "INFO"

javaOpts: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

messaging:
  local: false
  host: "messaging-service"
  amqp:
    port: 5672
  username: "czertainly"
