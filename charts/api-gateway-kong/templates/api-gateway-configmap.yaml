apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-configmap
data:
  kong.yml: |
    _format_version: '2.1'
    _transform: true
    services:
      - name: core
        host: {{ .Values.backend.core.service.name }}
        port: {{ .Values.backend.core.service.port }}
        protocol: http
        routes:
          - name: core_route-cert
            strip_path: false
            paths:
              - {{ .Values.backend.core.service.apiUrl}}*
            headers:
              ssl-client-cert:
                - ~*(.*?)
            plugins:
              - name: request-transformer
                config:
                  rename:
                    headers:
                      - '{{ .Values.auth.header.cert.downstream }}:{{ .Values.auth.header.cert.upstream }}'
          {{- if .Values.oidc.enabled }}
          - name: core_route-oidc
            strip_path: false
            paths:
              - {{ .Values.backend.core.service.apiUrl}}*
            plugins:
              - name: oidc
                config:
                  client_secret: {{ .Values.oidc.client.secret }}
                  client_id: {{ .Values.oidc.client.id }}
                  unauth_action: 'deny'
                  realm: {{ .Values.oidc.client.realm }}
                  discovery: >-
                    {{ .Values.oidc.client.discovery }}
              - name: request-transformer
                config:
                  remove:
                    headers:
                      - cookie
          {{- end }}
      - name: fe-administrator
        host: {{ .Values.backend.fe.service.name}}
        port: {{ .Values.backend.core.service.port }}
        protocol: http
        path: {{ .Values.backend.fe.service.baseUrl}}/
        routes:
          - name: fe-administrator_route-cert
            preserve_host: true
            strip_path: true
            paths:
              - {{ .Values.backend.fe.service.baseUrl}}*
            headers:
              ssl-client-cert:
                - ~*(.*?)
            plugins:
              - name: request-transformer
                config:
                  rename:
                    headers:
                      - '{{ .Values.auth.header.cert.downstream }}:{{ .Values.auth.header.cert.upstream }}'
          {{- if .Values.oidc.enabled }}
          - name: fe-administrator_route-oidc
            strip_path: true
            preserve_host: true
            paths:
              - {{ .Values.backend.fe.service.loginUrl}}
            plugins:
              - name: oidc
                config:
                  client_secret: {{ .Values.oidc.client.secret }}
                  client_id: {{ .Values.oidc.client.id }}
                  realm: {{ .Values.oidc.client.realm }}
                  discovery: >-
                    {{ .Values.oidc.client.discovery }}
              - name: response-transformer
                config:
                  add:
                    headers:
                      - cache-control:no-cache,no-store,max-age=0
              - name: post-function
                config:
                  access:
                    - |2
                        -- Get redirect query value
                        local redirect = kong.request.get_query_arg('redirect')

                        -- add validation of redirect path
                        -- should start with /$BASE_URL/

                        -- Redirect only if the redirect exists
                        if redirect then
                          kong.log.debug('Redirecting to: ' .. redirect)
                          return kong.response.exit(301, 'redirecting...', {['Location'] = redirect})
                        end
          - name: fe-administrator_route-logout
            strip_path: true
            preserve_host: true
            paths:
              - {{ .Values.backend.fe.service.logoutUrl}}
            plugins:
              - name: oidc
                config:
                  client_secret: {{ .Values.oidc.client.secret }}
                  client_id: {{ .Values.oidc.client.id }}
                  realm: {{ .Values.oidc.client.realm }}
                  discovery: >-
                    {{ .Values.oidc.client.discovery }}
                  # null because the default value is '/' and we need to invoke endpoint from discovery, if discovery does not provide it, it should be defined here
                  redirect_after_logout_uri: null
                  redirect_after_logout_with_id_token_hint: 'yes'
                  post_logout_redirect_uri: >-
                    {{ .Values.backend.fe.service.baseUrl}}/
          - name: fe-administrator_route
            strip_path: true
            preserve_host: true
            paths:
              - {{ .Values.backend.fe.service.baseUrl}}*
          {{- end }}
    {{- if .Values.cors.enabled }}
    plugins:
      - name: cors
        config:
          origins: {{ toYaml .Values.cors.origins | nindent 12 }}
          credentials: true
          max_age: 3600
          exposed_headers: {{ toYaml .Values.cors.exposedHeaders | nindent 12 }}
          preflight_continue: false
    {{- end }}