{{- $httpProxy := pluck "httpProxy" .Values.global .Values | compact | first }}
{{- $httpsProxy := pluck "httpsProxy" .Values.global .Values | compact | first }}
{{- $noProxy := pluck "noProxy" .Values.global .Values | compact | first }}
{{- $imagePullSecrets := pluck "imagePullSecrets" .Values.global .Values | compact | first }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keystore-entity-provider-deployment
  labels:
    {{- include "keystore-entity-provider.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keystore-entity-provider.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "keystore-entity-provider.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "keystore-entity-provider.imagePullSecrets" . | indent 6 }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- .Values.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: keystore-entity-provider
        image: {{ include "keystore-entity-provider.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: PORT
          value: {{ .Values.service.port | quote }}
        {{- if $httpProxy }}
        - name: HTTP_PROXY
          value: {{ $httpProxy }}
        {{- end }}
        {{- if $httpsProxy }}
        - name: HTTPS_PROXY
          value: {{ $httpsProxy }}
        {{- end }}
        {{- if $noProxy }}
        - name: NO_PROXY
          value: {{ $noProxy }}
        {{- end }}
        - name: LOGGING_LEVEL_COM_CZERTAINLY
          value: {{ .Values.logging.level | quote }}
        - name: JDBC_URL
          value: {{ include "czertainly-lib.util.format.jdbcUrl" (list . "?characterEncoding=UTF-8") | quote }}
        - name: JDBC_USERNAME
          valueFrom:
            secretKeyRef:
              name: keystore-entity-provider-secret
              key: username
        - name: JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keystore-entity-provider-secret
              key: password
        - name: JAVA_OPTS
          value: {{ .Values.javaOpts | quote }}
        ports:
          - containerPort: {{ .Values.service.port }}
        {{- if .Values.image.securityContext }}
        securityContext: {{- .Values.image.securityContext | toYaml | nindent 12 }}
        {{- end }}
        volumeMounts:
          - mountPath: /tmp
            name: ephemeral
      volumes:
        - name: ephemeral
          {{- include "keystore-entity-provider.ephemeralVolume" . | indent 10 }}
